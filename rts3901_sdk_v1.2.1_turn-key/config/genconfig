#! /bin/sh
#############################################################################

# Realtek Semiconductor Corp.
#
# Tony Wu (tonywu@realtek.com)
# Aug. 12, 2008
#

#############################################################################

INSTALL_PATH=/rts-ipc/toolchain

echo_separator()
{
	echo "##############################################################"
	echo
}

list_profile()
{
	b=$1
	r=$2

	if [ $r == "." ]; then
		p="."
	else
		p="model"
	fi

	PROFILES=(`cd boards/$b/$p/$r; find profile -maxdepth 1 -mindepth 1 \
			-type d -print | grep -v /\\\. | \
			sed -e 's?^profile/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
			sort`)

	if [ ${#PROFILES[*]} != 0 ]; then
		echo "choice"
		echo "  prompt \"Selected profile\""
		echo

		for (( k = 0 ; k < ${#PROFILES[*]} ; k++ ))
		do
			c=${PROFILES[$k]}
			CFG=PROFILE_$b"_"$r"_"$c
			DEF="$c"
			echo "config ${CFG}"
			echo "  bool \"${DEF}\""
			echo
		done
		echo "endchoice"
		echo

		for (( k = 0 ; k < ${#PROFILES[*]} ; k++ ))
		do
			c=${PROFILES[$k]}
			CFG=PROFILE_$b"_"$r"_"$c
			echo "if ${CFG}"
			echo "	source boards/$b/$p/$r/profile/$c/config.soc"
			echo "endif"
			echo
		done
	fi
}

declare -a ASDKS RSDKS MSDKS

if [ -d toolchain ]; then
ASDKS=(`find toolchain -maxdepth 1 -mindepth 1 -name 'asdk*-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)

RSDKS=(`find toolchain -maxdepth 1 -mindepth 1 -name 'rsdk-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
		   sort`)

MSDKS=(`find toolchain -maxdepth 1 -mindepth 1 -name 'msdk-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)
fi

declare -a BOARDS=(`find boards -maxdepth 1 -mindepth 1 -type d -print | \
                   grep -v /\\\. | \
                   sed -e 's?^boards/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)

if [ -d $INSTALL_PATH ]; then
declare -a INSTALL_ASDKS=(`cd /rts-ipc/; find toolchain -maxdepth 1 -mindepth 1 -name 'asdk-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)

declare -a INSTALL_RSDKS=(`cd /rts-ipc/; find toolchain -maxdepth 1 -mindepth 1 -name 'rsdk-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)

declare -a INSTALL_MSDKS=(`cd /rts-ipc/; find toolchain -maxdepth 1 -mindepth 1 -name 'msdk-*' -print | \
                   sed -e 's?^toolchain/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
                   sort`)
fi

#############################################################################
echo "mainmenu \"RLX Linux Configuration\""
echo

#############################################################################
echo "comment \"Select Configuration\""

#
# select target board
#
echo "choice"
echo "  prompt \"Selected target board\""
echo

for (( i = 0 ; i < ${#BOARDS[*]} ; i++ ))
do
	b=${BOARDS[$i]}
	[ "$b" = "internal" ] && continue
	[ "$b" = "template" ] && continue
	CFG="BOARD_$b"
	DEF="$b"
	echo "config ${CFG}"
	echo "  bool \"${DEF}\""
	echo
done

echo "endchoice"
echo
echo "config BOARDDIR"
echo "  string"
echo

echo_separator

for (( i = 0 ; i < ${#BOARDS[*]} ; i++ ))
do
	b=${BOARDS[$i]}
	[ "$b" = "internal" ] && continue
	[ "$b" = "template" ] && continue

	if [ -d boards/$b/model ] ; then
		MODELS=(`cd boards/$b; find model -maxdepth 1 -mindepth 1 \
				-type d -print | grep -v /\\\. | \
				sed -e 's?^model/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
				sort`)
	else
		MODELS=()
	fi

	echo "if BOARD_$b"
	if [ ${#MODELS[*]} != 0 ]; then
		echo "choice"
		echo "  prompt \"Selected CPU model\""
		echo

		for (( j = 0 ; j < ${#MODELS[*]} ; j++ ))
		do
			r=${MODELS[$j]}
			CFG=MODEL_$b"_"$r
			DEF="$r"
			echo "config ${CFG}"
			echo "  bool \"${DEF}\""
			echo
		done
		echo "endchoice"
		echo

		for (( j = 0 ; j < ${#MODELS[*]} ; j++ ))
		do
			r=${MODELS[$j]}
			CFG=MODEL_$b"_"$r
			echo "if ${CFG}"
			if [ -d boards/$b/model/$r/profile ] ; then
				list_profile $b $r
			else
				echo "source boards/$b/model/$r/config.soc"
			fi
			echo "endif"
			echo
		done
	else
		if [ -d boards/$b/profile ] ; then
			list_profile $b "."
		else
			echo "source boards/$b/config.soc"
		fi
	fi

	echo "endif"
	echo
done

echo "config MODELDIR"
echo "  string"
echo "config PROFILEDIR"
echo "  string"
echo

echo "source config/config.cpu"
echo

#
# select bootloader version
#
echo "choice"
echo "  prompt \"Selected bootloader\""
echo
echo "config BTLOAD_NONE"
echo "  bool \"none\""

if [ -d bootloader ]; then
  BTLOADS=(`find bootloader -maxdepth 1 -mindepth 1 -type d -name '*' -print | \
         sed -e 's?^bootloader/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
	 sort`)

  for (( i = 0; i < ${#BTLOADS[*]} ; i++ ))
  do
    v=${BTLOADS[$i]}
    CFG="BTLOAD_$v"
    DEF="$v"
    echo "config ${CFG}"
    echo "  bool \"${DEF}\""
  done
fi

echo "endchoice"
echo
echo "config BTLOADDIR"
echo "  string"
echo

echo "comment \"Select Components\""
#
# select kernel version
#
KERNELS="`ls -dr linux-* 2>/dev/null`"
echo "choice"
echo "  prompt \"Selected kernel\""
echo

for i in ${KERNELS}; do
	VER=${i##linux-}
	CFG="LINUX_${VER}"
	DEF="linux-${VER}"
	echo "config ${CFG}"
	echo "  bool \"${DEF}\""
	echo
done

echo "endchoice"
echo

echo "config LINUXDIR"
echo "  string"
echo

#############################################################################

#
# select toolchain version
#

echo "choice"
echo "  prompt \"Selected toolchain\""

## ARM
if [ x${#ASDKS[*]} != x"0" ]; then
  for (( i = 0 ; i < ${#ASDKS[*]} ; i++ ))
  do
	v=${ASDKS[$i]}
	CFG="RSDK_$v"
	DEF="$v"
	if [ ! -d toolchain/$v/bin ]; then
		continue
	fi
	echo "config ${CFG}"
	echo "  bool \"${DEF}\""
	echo "  depends on ARCH_CPU_ARM || ARCH_CPU_ARM64"
	if [[ ${DEF} =~ -a[0-9]+ ]]; then
		echo "${DEF}" | sed -n -e 's,.*-a\([0-9]\+\)-.*,  depends on ARCH_CPU_ARMA\1,p'
	fi
	echo "${DEF}" | sed -n -e 's,.*-\(E[BL]\)-.*,  depends on ARCH_CPU_\1,p'
	if [[ ${DEF} =~ -a[16,32].*f ]]; then
		echo "  depends on ARCH_CPU_FPU"
	fi
	if [[ ${DEF} =~ -a[16,32].*n ]]; then
		echo "  depends on ARCH_CPU_FPU"
	fi
  done
fi

## RLX
if [ x${#RSDKS[*]} != x"0" ]; then
  for (( i = 0 ; i < ${#RSDKS[*]} ; i++ ))
  do
	v=${RSDKS[$i]}
	CFG="RSDK_$v"
	DEF="$v"
	if [ ! -d toolchain/$v/bin ]; then
		if [ ! -d $INSTALL_PATH/$v/bin ]; then
			continue
		fi
	fi
	echo "config ${CFG}"
	echo "  bool \"${DEF}\""
	echo "${DEF}" | sed -n -e 's,.*-\([45][12]8[10]\)-.*,  depends on ARCH_CPU_RLX\1,p'
	echo "${DEF}" | sed -n -e 's,.*-\(E[BL]\)-.*,  depends on ARCH_CPU_\1,p'
	if [[ ${DEF} =~ -m[16,32].*f ]]; then
		echo "  depends on ARCH_CPU_FPU"
	fi
	if [[ ${DEF} =~ -m[16,32].*t ]]; then
		echo "  depends on ARCH_CPU_TLS"
	fi
	if [[ ${DEF} =~ -m[16,32].*u ]]; then
		echo "  depends on ARCH_CPU_ULS"
	fi
  done
fi

if [ x${#INSTALL_RSDKS[*]} != x"0" ]; then
  for (( i = 0 ; i < ${#INSTALL_RSDKS[*]} ; i++ ))
  do
	v=${INSTALL_RSDKS[$i]}
	CFG="RSDK_INSTALL_$v"
	DEF="$v"
	if [ ! -d toolchain/$v/bin ]; then
		if [ ! -d $INSTALL_PATH/$v/bin ]; then
			continue
		fi
	fi
	echo "config ${CFG}"
	echo "  bool \"${DEF}(Ext)\""
	echo "${DEF}" | sed -n -e 's,.*-\([45][12]8[10]\)-.*,  depends on ARCH_CPU_RLX\1,p'
	echo "${DEF}" | sed -n -e 's,.*-\(E[BL]\)-.*,  depends on ARCH_CPU_\1,p'
	if [[ ${DEF} =~ -m[16,32].*f ]]; then
		echo "  depends on ARCH_CPU_FPU"
	fi
	if [[ ${DEF} =~ -m[16,32].*t ]]; then
		echo "  depends on ARCH_CPU_TLS"
	fi
	if [[ ${DEF} =~ -m[16,32].*u ]]; then
		echo "  depends on ARCH_CPU_ULS"
	fi
  done
fi

## MIPS
if [ x${#MSDKS[*]} != x"0" ]; then
  for (( i = 0 ; i < ${#MSDKS[*]} ; i++ ))
  do
    v=${MSDKS[$i]}
	CFG="RSDK_$v"
	DEF="$v"
	if [ ! -d toolchain/$v/bin ]; then
		continue
	fi
	echo "config ${CFG}"
	echo "  bool \"${DEF}\""
	echo "  depends on ARCH_CPU_MIPS"
	echo "${DEF}" | sed -n -e 's,.*-\(E[BL]\)-.*,  depends on ARCH_CPU_\1,p'
	if [[ ${DEF} =~ -m[16,32].*f ]]; then
		echo "  depends on ARCH_CPU_FPU"
	fi
  done
fi

echo "endchoice"
echo
echo "config RSDKDIR"
echo "  string"
echo

echo_separator

for (( i = 0 ; i < ${#BOARDS[*]} ; i++ ))
do
	b=${BOARDS[$i]}
	[ "$b" = "internal" ] && continue
	[ "$b" = "template" ] && continue

	if [ -d boards/$b/model ] ; then
		MODELS=(`cd boards/$b; find model -maxdepth 1 -mindepth 1 \
				-type d -print | grep -v /\\\. | \
				sed -e 's?^model/??' -e 's?/[^/]*$??' -e 's?/? ?g' | \
				sort`)
	else
		MODELS=()
	fi

	for (( j = 0 ; j < ${#MODELS[*]} ; j++ ))
	do
		r=${MODELS[$j]}
		CFG=MODEL_$b"_"$r
		if [ -f "config/$b/target_configuration.in" ]
		then
			echo "if ${CFG}"
			echo "  source \"config/$b/target_configuration.in\""
			echo "endif"
		fi
	done
done

echo_separator
#############################################################################

echo "comment  \"Config components\""

echo
echo "source config/config.build"
echo
############################################################################
